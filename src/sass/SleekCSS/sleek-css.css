/***
    title: Background Colors
    section: Colors
    description: Use to apply a background color to an element. Add your colors to the $bg-colors array in config/_bg-colors.scss.
    example:
        <div class="bg--white">I have a white background color</div>
***/
.bg--transparent {
  background-color: transparent; }

.bg--white {
  background-color: #fff; }

/***
    title: Button
    section: Buttons
    description: Use to create buttons. Buttons come in various sizes and colors. Add more colors and customize your buttons in config/_button.scss.
    example:
        <p><a href="#" class="button">I'm a normal button</a></p>
        <p><button>Button elements automatically look like buttons</button></p>
        <p><input type="submit" value="Submit inputs too!"></p>
        <p><button class="button--wide">Full width!</button></p>
        <p><a href="#" class="button">Continue</a> <a href="#" class="button button--gray">Cancel</a></p>
        <p><a href="#" class="button button--small">Small button</a></p>
***/
.button,
input[type=submit],
button {
  background-color: #06f;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  padding: 0.8rem 2.4rem;
  font-size: 1rem;
  line-height: 1.2;
  color: #fff;
  font-weight: bold;
  text-transform: normal;
  text-decoration: none;
  text-align: center;
  border: 0;
  border-radius: 2rem;
  box-shadow: 0; }
  .button:hover,
  input[type=submit]:hover,
  button:hover {
    background-color: #1a75ff; }
  .button:active,
  input[type=submit]:active,
  button:active {
    background-color: #005ce6; }
  .button:hover,
  input[type=submit]:hover,
  button:hover {
    color: #fff;
    text-decoration: none; }

.button--blue {
  background-color: #06f; }
  .button--blue:hover {
    background-color: #1a75ff; }
  .button--blue:active {
    background-color: #005ce6; }

.button--red {
  background-color: #600; }
  .button--red:hover {
    background-color: maroon; }
  .button--red:active {
    background-color: #4d0000; }

.button--small {
  font-size: 0.8rem;
  padding: 0.64rem 1.92rem; }

.button--wide {
  display: block;
  width: 100%;
  padding-right: 1rem;
  padding-left: 1rem; }

/***
    title: Cols
    section: Grid
    description: Use to align elements in rows and columns. Perfect for use on ul/li setups or indeed any parent/child markup. Use bp--modifiers to set number of columns in different widths. Customize gutter and breakpoints in config/_cols.scss.
    example:
        <ul class="cols cols--2 cols--4--bp-medium">
            <li>I'm two columns</li>
            <li>In low resolution</li>
            <li>But four columns</li>
            <li>In high resolution</li>
        </ul>
***/
/**
 * @col
 *
 * FLoats elements into columns
 *
 * @param	int		$num: how many columns
 * @param	unit	$gutter: space between columns
 * @param	string	$selector: child-selector
 */
/**
 * @col
 *
 * A single column
 *
 * @param	int		$num: how many items per row
 * @param	unit	$gutter: space between cols
 */
.cols {
  clear: both;
  margin-left: 0;
  list-style: none; }
  .cols:after {
    content: "";
    display: table;
    clear: both; }

.cols--2 {
  clear: both;
  margin-left: 0;
  list-style: none; }
  .cols--2:after {
    content: "";
    display: table;
    clear: both; }
  .cols--2 > * {
    float: left;
    box-sizing: border-box;
    width: calc(50% - 0.5rem);
    margin-right: 1rem;
    width: calc(49.5% - 0.5rem) \9; }
    .cols--2 > *:after {
      content: "";
      display: table;
      clear: both; }
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      .cols--2 > * {
        width: calc(49.5% - 0.5rem); } }
    .cols--2 > *:not(:nth-of-type(2n)) {
      margin-right: 1rem; }
    .cols--2 > *:nth-of-type(2n) {
      margin-right: 0; }
  .cols--2 > *:nth-of-type(2n) + * {
    clear: both; }
  .cols--2 > *:not(:nth-of-type(2n)) + * {
    clear: none; }

.cols--3 {
  clear: both;
  margin-left: 0;
  list-style: none; }
  .cols--3:after {
    content: "";
    display: table;
    clear: both; }
  .cols--3 > * {
    float: left;
    box-sizing: border-box;
    width: calc(33.33333% - 0.66667rem);
    margin-right: 1rem;
    width: calc(33% - 0.66667rem) \9; }
    .cols--3 > *:after {
      content: "";
      display: table;
      clear: both; }
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      .cols--3 > * {
        width: calc(33% - 0.66667rem); } }
    .cols--3 > *:not(:nth-of-type(3n)) {
      margin-right: 1rem; }
    .cols--3 > *:nth-of-type(3n) {
      margin-right: 0; }
  .cols--3 > *:nth-of-type(3n) + * {
    clear: both; }
  .cols--3 > *:not(:nth-of-type(3n)) + * {
    clear: none; }

.cols--4 {
  clear: both;
  margin-left: 0;
  list-style: none; }
  .cols--4:after {
    content: "";
    display: table;
    clear: both; }
  .cols--4 > * {
    float: left;
    box-sizing: border-box;
    width: calc(25% - 0.75rem);
    margin-right: 1rem;
    width: calc(24.75% - 0.75rem) \9; }
    .cols--4 > *:after {
      content: "";
      display: table;
      clear: both; }
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      .cols--4 > * {
        width: calc(24.75% - 0.75rem); } }
    .cols--4 > *:not(:nth-of-type(4n)) {
      margin-right: 1rem; }
    .cols--4 > *:nth-of-type(4n) {
      margin-right: 0; }
  .cols--4 > *:nth-of-type(4n) + * {
    clear: both; }
  .cols--4 > *:not(:nth-of-type(4n)) + * {
    clear: none; }

@media (min-width: 400px) {
  .cols--2--bp-small {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--2--bp-small:after {
      content: "";
      display: table;
      clear: both; }
    .cols--2--bp-small > * {
      float: left;
      box-sizing: border-box;
      width: calc(50% - 0.5rem);
      margin-right: 1rem;
      width: calc(49.5% - 0.5rem) \9; }
      .cols--2--bp-small > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 400px) and (-ms-high-contrast: none), (min-width: 400px) and (-ms-high-contrast: active) {
      .cols--2--bp-small > * {
        width: calc(49.5% - 0.5rem); } }
@media (min-width: 400px) {
      .cols--2--bp-small > *:not(:nth-of-type(2n)) {
        margin-right: 1rem; }
      .cols--2--bp-small > *:nth-of-type(2n) {
        margin-right: 0; }
    .cols--2--bp-small > *:nth-of-type(2n) + * {
      clear: both; }
    .cols--2--bp-small > *:not(:nth-of-type(2n)) + * {
      clear: none; } }
@media (min-width: 400px) {
  .cols--3--bp-small {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--3--bp-small:after {
      content: "";
      display: table;
      clear: both; }
    .cols--3--bp-small > * {
      float: left;
      box-sizing: border-box;
      width: calc(33.33333% - 0.66667rem);
      margin-right: 1rem;
      width: calc(33% - 0.66667rem) \9; }
      .cols--3--bp-small > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 400px) and (-ms-high-contrast: none), (min-width: 400px) and (-ms-high-contrast: active) {
      .cols--3--bp-small > * {
        width: calc(33% - 0.66667rem); } }
@media (min-width: 400px) {
      .cols--3--bp-small > *:not(:nth-of-type(3n)) {
        margin-right: 1rem; }
      .cols--3--bp-small > *:nth-of-type(3n) {
        margin-right: 0; }
    .cols--3--bp-small > *:nth-of-type(3n) + * {
      clear: both; }
    .cols--3--bp-small > *:not(:nth-of-type(3n)) + * {
      clear: none; } }
@media (min-width: 400px) {
  .cols--4--bp-small {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--4--bp-small:after {
      content: "";
      display: table;
      clear: both; }
    .cols--4--bp-small > * {
      float: left;
      box-sizing: border-box;
      width: calc(25% - 0.75rem);
      margin-right: 1rem;
      width: calc(24.75% - 0.75rem) \9; }
      .cols--4--bp-small > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 400px) and (-ms-high-contrast: none), (min-width: 400px) and (-ms-high-contrast: active) {
      .cols--4--bp-small > * {
        width: calc(24.75% - 0.75rem); } }
@media (min-width: 400px) {
      .cols--4--bp-small > *:not(:nth-of-type(4n)) {
        margin-right: 1rem; }
      .cols--4--bp-small > *:nth-of-type(4n) {
        margin-right: 0; }
    .cols--4--bp-small > *:nth-of-type(4n) + * {
      clear: both; }
    .cols--4--bp-small > *:not(:nth-of-type(4n)) + * {
      clear: none; } }
@media (min-width: 760px) {
  .cols--2--bp-medium {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--2--bp-medium:after {
      content: "";
      display: table;
      clear: both; }
    .cols--2--bp-medium > * {
      float: left;
      box-sizing: border-box;
      width: calc(50% - 0.5rem);
      margin-right: 1rem;
      width: calc(49.5% - 0.5rem) \9; }
      .cols--2--bp-medium > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 760px) and (-ms-high-contrast: none), (min-width: 760px) and (-ms-high-contrast: active) {
      .cols--2--bp-medium > * {
        width: calc(49.5% - 0.5rem); } }
@media (min-width: 760px) {
      .cols--2--bp-medium > *:not(:nth-of-type(2n)) {
        margin-right: 1rem; }
      .cols--2--bp-medium > *:nth-of-type(2n) {
        margin-right: 0; }
    .cols--2--bp-medium > *:nth-of-type(2n) + * {
      clear: both; }
    .cols--2--bp-medium > *:not(:nth-of-type(2n)) + * {
      clear: none; } }
@media (min-width: 760px) {
  .cols--3--bp-medium {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--3--bp-medium:after {
      content: "";
      display: table;
      clear: both; }
    .cols--3--bp-medium > * {
      float: left;
      box-sizing: border-box;
      width: calc(33.33333% - 0.66667rem);
      margin-right: 1rem;
      width: calc(33% - 0.66667rem) \9; }
      .cols--3--bp-medium > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 760px) and (-ms-high-contrast: none), (min-width: 760px) and (-ms-high-contrast: active) {
      .cols--3--bp-medium > * {
        width: calc(33% - 0.66667rem); } }
@media (min-width: 760px) {
      .cols--3--bp-medium > *:not(:nth-of-type(3n)) {
        margin-right: 1rem; }
      .cols--3--bp-medium > *:nth-of-type(3n) {
        margin-right: 0; }
    .cols--3--bp-medium > *:nth-of-type(3n) + * {
      clear: both; }
    .cols--3--bp-medium > *:not(:nth-of-type(3n)) + * {
      clear: none; } }
@media (min-width: 760px) {
  .cols--4--bp-medium {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--4--bp-medium:after {
      content: "";
      display: table;
      clear: both; }
    .cols--4--bp-medium > * {
      float: left;
      box-sizing: border-box;
      width: calc(25% - 0.75rem);
      margin-right: 1rem;
      width: calc(24.75% - 0.75rem) \9; }
      .cols--4--bp-medium > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 760px) and (-ms-high-contrast: none), (min-width: 760px) and (-ms-high-contrast: active) {
      .cols--4--bp-medium > * {
        width: calc(24.75% - 0.75rem); } }
@media (min-width: 760px) {
      .cols--4--bp-medium > *:not(:nth-of-type(4n)) {
        margin-right: 1rem; }
      .cols--4--bp-medium > *:nth-of-type(4n) {
        margin-right: 0; }
    .cols--4--bp-medium > *:nth-of-type(4n) + * {
      clear: both; }
    .cols--4--bp-medium > *:not(:nth-of-type(4n)) + * {
      clear: none; } }
@media (min-width: 1020px) {
  .cols--2--bp-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--2--bp-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--2--bp-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(50% - 0.5rem);
      margin-right: 1rem;
      width: calc(49.5% - 0.5rem) \9; }
      .cols--2--bp-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1020px) and (-ms-high-contrast: none), (min-width: 1020px) and (-ms-high-contrast: active) {
      .cols--2--bp-large > * {
        width: calc(49.5% - 0.5rem); } }
@media (min-width: 1020px) {
      .cols--2--bp-large > *:not(:nth-of-type(2n)) {
        margin-right: 1rem; }
      .cols--2--bp-large > *:nth-of-type(2n) {
        margin-right: 0; }
    .cols--2--bp-large > *:nth-of-type(2n) + * {
      clear: both; }
    .cols--2--bp-large > *:not(:nth-of-type(2n)) + * {
      clear: none; } }
@media (min-width: 1020px) {
  .cols--3--bp-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--3--bp-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--3--bp-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(33.33333% - 0.66667rem);
      margin-right: 1rem;
      width: calc(33% - 0.66667rem) \9; }
      .cols--3--bp-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1020px) and (-ms-high-contrast: none), (min-width: 1020px) and (-ms-high-contrast: active) {
      .cols--3--bp-large > * {
        width: calc(33% - 0.66667rem); } }
@media (min-width: 1020px) {
      .cols--3--bp-large > *:not(:nth-of-type(3n)) {
        margin-right: 1rem; }
      .cols--3--bp-large > *:nth-of-type(3n) {
        margin-right: 0; }
    .cols--3--bp-large > *:nth-of-type(3n) + * {
      clear: both; }
    .cols--3--bp-large > *:not(:nth-of-type(3n)) + * {
      clear: none; } }
@media (min-width: 1020px) {
  .cols--4--bp-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--4--bp-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--4--bp-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(25% - 0.75rem);
      margin-right: 1rem;
      width: calc(24.75% - 0.75rem) \9; }
      .cols--4--bp-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1020px) and (-ms-high-contrast: none), (min-width: 1020px) and (-ms-high-contrast: active) {
      .cols--4--bp-large > * {
        width: calc(24.75% - 0.75rem); } }
@media (min-width: 1020px) {
      .cols--4--bp-large > *:not(:nth-of-type(4n)) {
        margin-right: 1rem; }
      .cols--4--bp-large > *:nth-of-type(4n) {
        margin-right: 0; }
    .cols--4--bp-large > *:nth-of-type(4n) + * {
      clear: both; }
    .cols--4--bp-large > *:not(:nth-of-type(4n)) + * {
      clear: none; } }
@media (min-width: 1600px) {
  .cols--2--bp-x-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--2--bp-x-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--2--bp-x-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(50% - 0.5rem);
      margin-right: 1rem;
      width: calc(49.5% - 0.5rem) \9; }
      .cols--2--bp-x-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1600px) and (-ms-high-contrast: none), (min-width: 1600px) and (-ms-high-contrast: active) {
      .cols--2--bp-x-large > * {
        width: calc(49.5% - 0.5rem); } }
@media (min-width: 1600px) {
      .cols--2--bp-x-large > *:not(:nth-of-type(2n)) {
        margin-right: 1rem; }
      .cols--2--bp-x-large > *:nth-of-type(2n) {
        margin-right: 0; }
    .cols--2--bp-x-large > *:nth-of-type(2n) + * {
      clear: both; }
    .cols--2--bp-x-large > *:not(:nth-of-type(2n)) + * {
      clear: none; } }
@media (min-width: 1600px) {
  .cols--3--bp-x-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--3--bp-x-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--3--bp-x-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(33.33333% - 0.66667rem);
      margin-right: 1rem;
      width: calc(33% - 0.66667rem) \9; }
      .cols--3--bp-x-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1600px) and (-ms-high-contrast: none), (min-width: 1600px) and (-ms-high-contrast: active) {
      .cols--3--bp-x-large > * {
        width: calc(33% - 0.66667rem); } }
@media (min-width: 1600px) {
      .cols--3--bp-x-large > *:not(:nth-of-type(3n)) {
        margin-right: 1rem; }
      .cols--3--bp-x-large > *:nth-of-type(3n) {
        margin-right: 0; }
    .cols--3--bp-x-large > *:nth-of-type(3n) + * {
      clear: both; }
    .cols--3--bp-x-large > *:not(:nth-of-type(3n)) + * {
      clear: none; } }
@media (min-width: 1600px) {
  .cols--4--bp-x-large {
    clear: both;
    margin-left: 0;
    list-style: none; }
    .cols--4--bp-x-large:after {
      content: "";
      display: table;
      clear: both; }
    .cols--4--bp-x-large > * {
      float: left;
      box-sizing: border-box;
      width: calc(25% - 0.75rem);
      margin-right: 1rem;
      width: calc(24.75% - 0.75rem) \9; }
      .cols--4--bp-x-large > *:after {
        content: "";
        display: table;
        clear: both; } }
    @media all and (min-width: 1600px) and (-ms-high-contrast: none), (min-width: 1600px) and (-ms-high-contrast: active) {
      .cols--4--bp-x-large > * {
        width: calc(24.75% - 0.75rem); } }
@media (min-width: 1600px) {
      .cols--4--bp-x-large > *:not(:nth-of-type(4n)) {
        margin-right: 1rem; }
      .cols--4--bp-x-large > *:nth-of-type(4n) {
        margin-right: 0; }
    .cols--4--bp-x-large > *:nth-of-type(4n) + * {
      clear: both; }
    .cols--4--bp-x-large > *:not(:nth-of-type(4n)) + * {
      clear: none; } }
/***
    title: Container
    section: Layout
    description: Centers an element on the screen at a width of $site-width and a max width of $site-width-max.
    example:
        <div class="container">
            <h1>I'm centered</h1>
            <p>In the middle of the page</p>
        </div>
***/
.container {
  width: 960px;
  max-width: 90%;
  margin-left: auto;
  margin-right: auto; }

/***
    title: Forms
    section: Forms
    description: Form styling.
    example:
        <form method="post" action="">
            <p>
                <label>
                    Name<br>
                    <input type="text" name="name" placeholder="eg. John Doe">
                </label>
            </p>
            <p>
                <label>
                    Email<br>
                    <input type="email" name="email" placeholder="eg. john.doe@example.com">
                </label>
            </p>
            <p>
                <label>
                    Message<br>
                    <textarea name="message" rows="3" cols="60" placeholder="Write your message here"></textarea>
                </label>
            </p>
            <p><input type="submit" value="Go"></p>
        </form>
***/
p.message.success {
  color: #060; }
p.message.error {
  color: #600; }

form {
  margin: 0; }
  form strong.error {
    display: block;
    margin-top: 0.5rem;
    color: #600; }
  form abbr,
  form abbr[title] {
    color: #600;
    border-bottom: 0; }

.form__field {
  margin-bottom: 1rem; }

label {
  display: block; }

input[type=text], input[type=password], input[type=search], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=date], input[type=month], input[type=week], input[type=time], input[type=datetime], input[type=datetime-local], input[type=color], textarea {
  background: #fff;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0;
  padding: 0.8rem 2.4rem;
  font-size: 1rem;
  color: #333;
  line-height: 1.2\9;
  -moz-appearance: none;
  -webkit-appearance: none;
  border: 0;
  outline: 0;
  border-radius: 2rem;
  width: 100%; }
  input[type=text]:hover, input[type=text]:focus, input[type=password]:hover, input[type=password]:focus, input[type=search]:hover, input[type=search]:focus, input[type=email]:hover, input[type=email]:focus, input[type=url]:hover, input[type=url]:focus, input[type=tel]:hover, input[type=tel]:focus, input[type=number]:hover, input[type=number]:focus, input[type=date]:hover, input[type=date]:focus, input[type=month]:hover, input[type=month]:focus, input[type=week]:hover, input[type=week]:focus, input[type=time]:hover, input[type=time]:focus, input[type=datetime]:hover, input[type=datetime]:focus, input[type=datetime-local]:hover, input[type=datetime-local]:focus, input[type=color]:hover, input[type=color]:focus, textarea:hover, textarea:focus {
    border-color: rgba(75, 75, 75, 0.5); }

input[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration {
  display: none; }

input[type=radio],
input[type=checkbox] {
  margin-right: .4rem; }
  [dir=rtl] input[type=radio], [dir=rtl]
  input[type=checkbox] {
    margin-right: 0;
    margin-left: .4rem; }

textarea {
  resize: y;
  max-width: 100%; }

select {
  box-sizing: border-box; }

::placeholder {
  color: #999; }

input[type=submit],
button {
  outline: 0; }

form .form__connected-fields:after {
  content: "";
  display: table;
  clear: both; }
form .form__connected-fields > * {
  float: left;
  width: auto;
  min-height: 3.2rem; }

/***
    title: Headings
    section: Typography
    description: Use to create headings. H1-H6 automatically get the correct styling, however you can use the heading--X classes to make non-headings look like headings, and headings of one size appear to have a different size.
    example:
        <h1 class="heading--4">I'm a H1 but look like a H4</h1>
        <h3>I'm a normal H3</h3>
        <p class="heading--1">I'm not a heading at all!</p>
***/
h1,
h2,
h3,
h4,
h5,
h6,
.heading--1,
.heading--2,
.heading--3,
.heading--4,
.heading--5,
.heading--6 {
  display: block;
  margin: 0 0 1rem;
  font-weight: bold;
  font-size: 2.4rem;
  line-height: 1.2;
  font-family: Helvetica, sans-serif;
  color: #666; }

h2,
.heading--2 {
  font-size: 2rem; }

h3,
.heading--3 {
  font-size: 1.6rem; }

h4,
.heading--4 {
  font-size: 1.4rem; }

h5,
.heading--5 {
  font-size: 1.2rem; }

h6,
.heading--6 {
  font-size: 1.1rem; }

@media (max-width: 759px) {
  h1,
  .heading--1 {
    font-size: 1.68rem; }

  h2,
  .heading--2 {
    font-size: 1.4rem; }

  h3,
  .heading--3 {
    font-size: 1.12rem; } }
/***
    title: Icon
    section: Icons
    description: Use to add icons to elements. Icons added to empty elements will have zero spacing around them whereas icons added to elements with content will have some spacing. Add icons to the icons.json file (using fontello.com) and Gulp takes care of the rest.
    example:
        <p>
            <a href="#" class="icon-facebook">Facebook</a>
            <a href="#" class="icon-twitter">Twitter</a>
            <a href="#" class="icon-facebook icon--round" title="Facebook"></a>
            <a href="#" class="icon-twitter icon--round" title="Twitter"></a>
            <button class="icon-search">Find</button>
            <a href="#" class="icon-right icon--after">Icon after text</a>
        </p>

        <ul class="cols cols--2">
            <li class="icon-facebook icon--above">Facebook</li>
            <li class="icon-twitter icon--above">Twitter</li>
        </ul>
***/
/**
 * Some icon tweaks and margins
 */
[class^="icon-"]:before,
[class*="icon-"]:before {
  margin: 0 .2em 0 0; }
[class^="icon-"].icon--after:after,
[class*="icon-"].icon--after:after {
  margin: 0 0 0 .2em; }
[class^="icon-"]:empty:after, [class^="icon-"]:empty:before,
[class*="icon-"]:empty:after,
[class*="icon-"]:empty:before {
  margin: 0; }

/**
 * Spinner
 */
@keyframes spin {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(360deg); } }
.icon-spinner:before,
.icon-spinner.icon--after:after {
  animation: spin 1.5s infinite linear; }

/**
 * Round icon
 */
.icon--round {
  text-decoration: none; }
  .icon--round:hover {
    text-decoration: none; }
  .icon--round:before, .icon--round.icon--after:after {
    background: darkgray;
    width: 2.2em;
    height: 2.2em;
    line-height: 2.2em;
    text-align: center;
    color: #fff;
    text-shadow: none;
    border-radius: 50%;
    transition: border-radius .05s ease-out; }
  .icon--round--transparent:before, .icon--round--transparent.icon--after:after {
    background: transparent;
    border: 1px solid #fff; }

a.icon--round:hover:before, a.icon--round:hover.icon--after:after,
a:hover .icon--round:before,
a:hover .icon--round.icon--after:after {
  border-radius: .2rem; }

/**
 * Icon Above
 */
.icon--above {
  text-align: center; }
  .icon--above:before {
    display: block;
    margin: 0 auto;
    font-size: 2.2rem; }

/***
    title: Images
    section: Images
    description: Various helper classes for styling images.
    example:
        <img src="http://placehold.it/100x100" class="img--round"> <img src="http://placehold.it/100x100" class="img--rounded">
***/
.img--round {
  border-radius: 50%; }

.img--rounded {
  border-radius: .4rem; }

/***
    title: Inline Grid
    section: Grid
    description: Uses inline-block to create a grid. Useful if you dynamically toggle elemens in the grid and need them to adapt to new positions. Note that there can't be any whitespace between elements in the HTML source code and for some reason doesn't work in the styleguide.
    example:
        <ul class="inline-grid inline-grid--2--bp-medium"><li>Two column grid</li><li>Two column grid</li><li>Two column grid</li><li>Two column grid</li></ul>
***/
.inline-grid {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }
  .inline-grid > * {
    display: inline-block;
    vertical-align: top;
    width: 100%; }

.inline-grid--2 > * {
  width: 50%; }

.inline-grid--3 > * {
  width: 33.33333%; }

.inline-grid--4 > * {
  width: 25%; }

@media (min-width: 400px) {
  .inline-grid--2--bp-small > * {
    width: 50%; } }
@media (min-width: 400px) {
  .inline-grid--3--bp-small > * {
    width: 33.33333%; } }
@media (min-width: 400px) {
  .inline-grid--4--bp-small > * {
    width: 25%; } }
@media (min-width: 760px) {
  .inline-grid--2--bp-medium > * {
    width: 50%; } }
@media (min-width: 760px) {
  .inline-grid--3--bp-medium > * {
    width: 33.33333%; } }
@media (min-width: 760px) {
  .inline-grid--4--bp-medium > * {
    width: 25%; } }
@media (min-width: 1020px) {
  .inline-grid--2--bp-large > * {
    width: 50%; } }
@media (min-width: 1020px) {
  .inline-grid--3--bp-large > * {
    width: 33.33333%; } }
@media (min-width: 1020px) {
  .inline-grid--4--bp-large > * {
    width: 25%; } }
@media (min-width: 1600px) {
  .inline-grid--2--bp-x-large > * {
    width: 50%; } }
@media (min-width: 1600px) {
  .inline-grid--3--bp-x-large > * {
    width: 33.33333%; } }
@media (min-width: 1600px) {
  .inline-grid--4--bp-x-large > * {
    width: 25%; } }
/***
    title: Link
    section: Links
    description: Link styling. You can use the link class to make anything look like a link.
    example:
        <a href="#">Normal link</a>
        <span class="link">Not a link at all</span>
        <a href="#" class="link--neutral">Link that looks like text</a>
        <a href="#" class="link--underline">Link with underline</a>
***/
a,
.link {
  cursor: pointer;
  text-decoration: none;
  color: #06f; }
  a:hover,
  .link:hover {
    text-decoration: underline;
    color: #09f; }

.link--neutral {
  color: inherit; }
  .link--neutral:hover {
    text-decoration: none;
    color: inherit; }

.link--underline {
  text-decoration: underline; }
  .link--underline:hover {
    text-decoration: none; }

.link--no-underline {
  text-decoration: underline; }
  .link--no-underline:hover {
    text-decoration: none; }

/***
    title: List
    section: Lists
    description: Various classes you can use on lists, or list like markup.
    example:
        <ul class="list--pipe-separated">
            <li>Pipes</li>
            <li>Separate</li>
            <li>Me</li>
        </ul>
        <h2>Fancy list</h2>
        <ul class="list--fancy">
            <li>With red bullets</li>
            <li>With red bullets</li>
            <li>With red bullets</li>
            <li>With red bullets</li>
        </ul>
        <h2>Inline list</h2>
        <ul class="list--inline text--center">
            <li>Inline list</li>
            <li>Inline list</li>
            <li>Inline list</li>
            <li>Inline list</li>
        </ul>
        <h2>Striped list</h2>
        <ul class="list--stripe">
            <li>Striped list</li>
            <li>Striped list</li>
            <li>Striped list</li>
            <li>Striped list</li>
        </ul>
        <h2>Steps</h2>
        <ol class="list--steps text--center bg--link">
            <li>Step 1</li>
            <li>Step 2</li>
            <li>Step 3</li>
        </ol>
***/
.list--pipe-separated {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }
  .list--pipe-separated > * {
    display: inline-block; }
    .list--pipe-separated > *:not(:last-child):after {
      content: " | ";
      margin: 0 0.5rem; }

.list--inline {
  margin-left: 0;
  list-style: none; }
  .list--inline > * {
    display: inline-block;
    margin-right: 0.5rem;
    margin-bottom: 0.5rem; }

.text--center .list--inline > *,
.text--center.list--inline > * {
  margin: 0 0.25rem; }

/***
    title: Primary/Secondary
    section: Grid
    description: Super basic primary/secondary content columns when you really don't need an entire grid system.
    example:
        <div class="box box__content">
            <div class="primary">
                <p>Primary content here</p>
            </div>
            <div class="secondary">
                <p>Secondary content here</p>
            </div>
        </div>
        <div class="box box__content">
            <div class="secondary">
                <p>Reversed order here</p>
            </div>
            <div class="primary">
                <p>Primary content here</p>
            </div>
        </div>
***/
@media (min-width: 760px) {
  .primary {
    width: 60%;
    float: left; }

  .secondary {
    width: 35%;
    float: left; }

  .primary + .secondary {
    margin-left: 5%; }

  .secondary + .primary {
    margin-left: 5%; }

  .primary + .secondary + * {
    clear: both; }

  .secondary + .primary + * {
    clear: both; } }
@media (max-width: 759px) {
  .primary,
  .secondary {
    margin-bottom: 1rem; } }
/***
    title: Text Colors
    section: Colors
    description: Use to give an element's text a different color.
    example:
        <div class="bg--link color--white">
            <h2>I have white</h2>
            <p>Text text text text text text text text text text text text text</p>
        </div>
***/
.color--transparent,
h1.color--transparent,
h2.color--transparent,
h3.color--transparent,
h4.color--transparent,
h5.color--transparent,
h6.color--transparent,
.heading--1.color--transparent,
.heading--2.color--transparent,
.heading--3.color--transparent,
.heading--4.color--transparent,
.heading--5.color--transparent,
.heading--6.color--transparent,
a.color--transparent,
.link.color--transparent {
  color: transparent; }

a.color--transparent:hover,
.link.color--transparent:hover {
  color: #09f;
  text-decoration: none; }

.color--transparent h1,
.color--transparent h2,
.color--transparent h3,
.color--transparent h4,
.color--transparent h5,
.color--transparent h6,
.color--transparent .heading--1,
.color--transparent .heading--2,
.color--transparent .heading--3,
.color--transparent .heading--4,
.color--transparent .heading--5,
.color--transparent .heading--6,
.color--transparent a:not(.button),
.color--transparent .link {
  color: transparent;
  text-decoration: none; }
.color--transparent a:not(.button):hover,
.color--transparent .link:hover {
  color: #09f;
  text-decoration: none; }

.color--white,
h1.color--white,
h2.color--white,
h3.color--white,
h4.color--white,
h5.color--white,
h6.color--white,
.heading--1.color--white,
.heading--2.color--white,
.heading--3.color--white,
.heading--4.color--white,
.heading--5.color--white,
.heading--6.color--white,
a.color--white,
.link.color--white {
  color: #fff; }

a.color--white:hover,
.link.color--white:hover {
  color: #09f;
  text-decoration: none; }

.color--white h1,
.color--white h2,
.color--white h3,
.color--white h4,
.color--white h5,
.color--white h6,
.color--white .heading--1,
.color--white .heading--2,
.color--white .heading--3,
.color--white .heading--4,
.color--white .heading--5,
.color--white .heading--6,
.color--white a:not(.button),
.color--white .link {
  color: #fff;
  text-decoration: none; }
.color--white a:not(.button):hover,
.color--white .link:hover {
  color: #09f;
  text-decoration: none; }

/***
    title: Text
    section: Typography
    description: Various helper classes for working with text.
    example:
        <p class="text--center">This text is centered and <strong class="text--upper">upper case</strong></p>
***/
.text--upper {
  text-transform: uppercase; }

.text--center {
  text-align: center; }

.text--ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

/*# sourceMappingURL=sleek-css.css.map */
