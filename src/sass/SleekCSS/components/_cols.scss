/***
    title: Cols
    section: Grid
    description: Use to align elements in rows and columns. Perfect for use on ul/li setups or indeed any parent/child markup. Use bp--modifiers to set number of columns in different widths. Customize gutter and breakpoints in config/_cols.scss.
    example:
        <ul class="cols cols--2 cols--4--bp-medium">
            <li>I'm two columns</li>
            <li>In low resolution</li>
            <li>But four columns</li>
            <li>In high resolution</li>
        </ul>
***/

/**
 * @col
 *
 * FLoats elements into columns
 *
 * @param	int		$num: how many columns
 * @param	unit	$gutter: space between columns
 * @param	string	$selector: child-selector
 */
@mixin cols ($num: 3, $gutter: $gutter, $selector: '*') {
	@include clearfix;

	clear: both; // Probably desirable

	// In case it's used on a UL
	margin-left: 0;
	list-style: none;

	> #{$selector} {
		@include col($num, $gutter);
	}

	// Make sure first element in row clears previous row
	> #{$selector}:nth-child(#{$num}n) + * {
		clear: both;
	}

	// Make sure all elements except first clear none
	> #{$selector}:not(:nth-child(#{$num}n)) + * {
		clear: none;
	}
}

/**
 * @col
 *
 * A single column
 *
 * @param	int		$num: how many items per row
 * @param	unit	$gutter: space between cols
 */
@mixin col ($num: 3, $gutter: $gutter) {
	@include clearfix;

	// Duh :P
	float: left;

	// Calculate total gutter and gutter between each col
	$total-gutter: $gutter * ($num - 1);
	$width-subtract: $total-gutter / $num;

	box-sizing: border-box;
	width: calc(#{(100% / $num)} - #{$width-subtract});
	margin-right: $gutter;

	// Fix IE's rounding of percentage :/
	width: calc(#{(99% / $num)} - #{$width-subtract})\9;

	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		width: calc(#{(99% / $num)} - #{$width-subtract});
	}

	// Margin right for all but last element in row
	&:not(:nth-child(#{$num}n)) {
		margin-right: $gutter;
	}

	// No margin right for last element in row
	&:nth-child(#{$num}n) {
		margin-right: 0;
	}
}

// Base class in case there should be 0 columns in low res
.cols {
	@include clearfix;

	clear: both; // This is probably desirable

	// In case it's used on a list
	margin-left: 0;
	list-style: none;
}

// Create cols--X classes for all specified column counts
@each $num in $col-nums {
	.cols--#{nth($num, 1)} {
		@include cols(nth($num, 2), $gutter-default);
	}
}

// Create cols--X--bp-Y classes for all specified column counts and breakpoints
@each $bp in $col-breakpoints {
	@each $num in $col-nums {
		@media #{nth($bp, 2)} {
			.cols--#{nth($num, 1)}--#{nth($bp, 1)} {
				@include cols(nth($num, 2), $gutter-default);
			}
		}
	}
}
